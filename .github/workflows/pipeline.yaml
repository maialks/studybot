name: Main Pipeline

on:
  push:
    branches: main

jobs:
  ci:
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5
          --health-start-period=10s
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '22.2'

      - name: install dependencias
        run: npm ci

      - name: run linting
        run: npm run eslint

      - name: run tests
        run: npm run test:ci

      - name: build
        run: npm run build

      - name: pack deployment artifact
        run: |
          echo "empacotando artefato..."
          mkdir -p deploy-package
          cp -r dist deploy-package
          cp package.json package-lock.json ecosystem.config.cjs deploy-package/
          tar -czf deploy-package.tar.gz -C deploy-package .
          echo "artefato empacotado"

      - name: upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy-package
          path: deploy-package.tar.gz
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: [ci]
    if: ${{ github.event_name == 'push' }}
    concurrency: deploy-group

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: download build artifact
        uses: actions/download-artifact@v4
        with:
          name: deploy-package
          path: .

      - name: ssh setup
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.VM_SSH_KEY}}" | base64 -d > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      - name: copy package to VM
        run: scp -i ~/.ssh/id_ed25519 deploy-package.tar.gz ubuntu@${{ secrets.VM_HOST }}:~/deploy-package.tar.gz

      - name: create deploy script on VM
        run: |
          ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.VM_HOST }} 'cat > ~/deploy-studybot.sh << "EOF"
          #!/bin/bash
          set -e

          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

          if [ ! -f ~/deploy-package.tar.gz ]; then
            echo "package not found"
            exit 1
          fi

          cd /opt/studybot

          if [ -d "dist" ]; then
            rm -rf dist node_modules package.json package-lock.json
          fi

          tar -xzf ~/deploy-package.tar.gz -C .

          if [ ! -d "dist" ]; then
            echo "dist directory was not extracted"
            exit 1
          fi

          npm ci --omit=dev

          if pm2 list | grep -q studybot; then
            echo "studybot was already running, restarting now"
            pm2 restart studybot
          else
            echo "studybot starting"
            pm2 start ecosystem.config.cjs
          fi

          pm2 save
          rm ~/deploy-package.tar.gz
          EOF'
          ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.VM_HOST }} "chmod +x ~/deploy-studybot.sh"

      - name: deploy to vm
        run: ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.VM_HOST }} "bash ~/deploy-studybot.sh"

      - name: bump version and push tag
        if: success()
        uses: anothrNick/github-tag-action@4ed44965e0db8dab2b466a16da04aec3cc312fd8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

      - name: discord notification - deploy success
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: 'GitHub CI'
          DISCORD_AVATAR: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
          DISCORD_EMBEDS: >-
            [
              {
                "title": "Studybot Deploy Successful",
                "description": "**Repository:** [${{ github.repository }}](https://github.com/${{ github.repository }})\n**Branch:** `${{ github.ref_name }}`\n**Commit:** [${{ github.event.head_commit.id }}](https://github.com/${{ github.repository }}/commit/${{ github.event.head_commit.id }})\n\nThe deployment of Studybot has been successfully completed.",
                "color": 3066993,
                "footer": { "text": "GitHub Actions | Studybot Deployment" },
                "timestamp": "${{ github.event.head_commit.timestamp }}"
              }
            ]
        uses: Ilshidur/action-discord@d2594079a10f1d6739ee50a2471f0ca57418b554
        with:
          args: ''

  notify_failure:
    name: discord notificaton - pipeline failure
    runs-on: ubuntu-latest
    if: failure()
    needs: [ci, deploy]
    steps:
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: 'GitHub CI'
          DISCORD_AVATAR: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
          DISCORD_EMBEDS: >-
            [
              {
                "title": "Pipeline Failed",
                "description": "**Repository:** [${{ github.repository }}](https://github.com/${{ github.repository }})\n**Branch:** `${{ github.ref_name }}`\n**Commit:** [${{ github.event.head_commit.id }}](https://github.com/${{ github.repository }}/commit/${{ github.event.head_commit.id }})\n\nA failure occurred in the CI/CD pipeline. Please check the logs for details.",
                "color": 15158332,
                "footer": { "text": "GitHub Actions | Studybot CI/CD Error" },
                "timestamp": "${{ github.event.head_commit.timestamp }}"
              }
            ]
        uses: Ilshidur/action-discord@d2594079a10f1d6739ee50a2471f0ca57418b554
        with:
          args: ''
